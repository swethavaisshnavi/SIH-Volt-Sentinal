#include <HardwareSerial.h>

// Define ESP32 pins
#define VOLTAGE_SENSOR_PIN 32   // ZMPT101B connected here
#define FLAME_SENSOR_PIN 35     // KY-026 connected here
#define ALERT_LED_PIN 2         // On-board or external LED
#define GSM_RX_PIN 16           // SIM800L TX -> ESP32 RX2
#define GSM_TX_PIN 17           // SIM800L RX -> ESP32 TX2

// Define thresholds
const int VOLTAGE_THRESHOLD = 50;   // Adjust based on calibration
const int FLAME_THRESHOLD = 500;    // Adjust based on calibration

// Define phone number for SMS alert
const char* phoneNumber = "+91XXXXXXXXXX"; // Replace with your phone number

// Setup GSM Serial
HardwareSerial gsmSerial(2);

void setup() {
  Serial.begin(115200);
  gsmSerial.begin(9600, SERIAL_8N1, GSM_RX_PIN, GSM_TX_PIN);
  pinMode(ALERT_LED_PIN, OUTPUT);
  digitalWrite(ALERT_LED_PIN, LOW);
}

void loop() {
  // Read sensor values
  int voltageValue = analogRead(VOLTAGE_SENSOR_PIN);
  int flameValue = analogRead(FLAME_SENSOR_PIN);

  Serial.print("Voltage Sensor Value: ");
  Serial.println(voltageValue);
  Serial.print("Flame Sensor Value: ");
  Serial.println(flameValue);

  // Check for fault conditions
  // Breakage is detected when voltage drops to near zero
  if (voltageValue < VOLTAGE_THRESHOLD) {
    Serial.println("BREAKAGE DETECTED!");
    sendSMS("BREAKAGE DETECTED on AC line!");
    digitalWrite(ALERT_LED_PIN, HIGH);
    delay(5000); 
  }
  
  // Short-circuit is detected when flame is sensed
  if (flameValue < FLAME_THRESHOLD) {
    Serial.println("SHORT-CIRCUIT DETECTED!");
    sendSMS("SHORT-CIRCUIT DETECTED on AC line!");
    digitalWrite(ALERT_LED_PIN, HIGH);
    delay(5000);
  }

  // If no fault, keep LED off and continue monitoring
  if (voltageValue >= VOLTAGE_THRESHOLD && flameValue >= FLAME_THRESHOLD) {
    digitalWrite(ALERT_LED_PIN, LOW);
  }

  delay(1000);
}

void sendSMS(const char* message) {
  Serial.println("Sending SMS...");
  gsmSerial.println("AT+CMGF=1");  
  delay(1000);
  gsmSerial.print("AT+CMGS=\"");
  gsmSerial.print(phoneNumber);
  gsmSerial.println("\"");
  delay(1000);
  gsmSerial.print(message);
  delay(500);
  gsmSerial.write(0x1A);
  delay(3000);
  Serial.println("SMS sent.");
}
